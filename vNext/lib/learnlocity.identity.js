// Generated by CoffeeScript 1.6.3
(function() {
  (function() {
    var apiErrorHandle, dialog, dialogOptions, mod;
    apiErrorHandle = function(err) {
      var message;
      message = 'Encountered an unexpected error:\n\n' + JSON.stringify(err);
      return console.error(message);
    };
    mod = angular.module('learnlocity.identity', ['ui.bootstrap', 'learnlocity.api']);
    mod.directive('match', function($parse) {
      return {
        require: 'ngModel',
        link: function(scope, elem, attrs, ctrl) {
          return scope.$watch((function() {
            return $parse(attrs.match)(scope) === ctrl.$modelValue;
          }), function(currentValue) {
            return ctrl.$setValidity('mismatch', currentValue);
          });
        }
      };
    });
    dialog = null;
    dialogOptions = {
      controller: 'identityController',
      templateUrl: 'lib/learnlocity/partials/learnlocity.identity.identifyUser.html',
      backdrop: true,
      keyboard: true,
      backdropClick: true
    };
    return mod.controller('identityController', function($rootScope, $scope, $dialog, User) {
      var clearErrors;
      clearErrors = function() {
        $scope.userNameTaken = false;
        return $scope.loginFailed = false;
      };
      $scope.form = {
        userName: '',
        password: '',
        passwordConfirmation: ''
      };
      $scope.userIdentifyDialogShow = function() {
        dialog = $dialog.dialog(dialogOptions);
        return dialog.open().then(function(result) {
          if (result) {
            return console.log(result);
          }
        });
      };
      $scope.close = function(result) {
        return dialog.close(result);
      };
      $scope.logIn = function() {
        clearErrors();
        return User.query({
          q: JSON.stringify({
            $and: [
              {
                userName: {
                  $regex: '^' + $scope.form.userName + '$',
                  $options: 'i'
                }
              }, {
                password: $scope.form.password
              }
            ]
          })
        }, (function(results) {
          var user;
          if (results.length > 0) {
            user = results[0];
            $rootScope.userName = user.userName;
            $rootScope.userLoggedIn = true;
            return dialog.close(true);
          } else {
            return $scope.loginFailed = true;
          }
        }), apiErrorHandle);
      };
      return $scope.register = function() {
        clearErrors();
        return User.query({
          q: JSON.stringify({
            userName: {
              $regex: '^' + $scope.form.userName + '$',
              $options: 'i'
            }
          })
        }, (function(results) {
          var user;
          if (results.length > 0) {
            return $scope.userNameTaken = true;
          } else {
            user = {
              userName: $scope.form.userName,
              password: $scope.form.password
            };
            return User.save(user, (function(newUser) {
              $rootScope.userName = newUser.userName;
              $rootScope.userLoggedIn = true;
              return dialog.close(true);
            }), apiErrorHandle);
          }
        }), apiErrorHandle);
      };
    });
  })();

}).call(this);
